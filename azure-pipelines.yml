# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**' 
    TargetFolder: '$(build.ArtifactStagingDirectory)'

- task: CmdLine@2
  displayName: 'Test code quality'
  inputs:
    script: |
      echo "Test code quality"
      python3 -m venv myenv
      ./myenv/bin/python -m pip install --upgrade pip
      ./myenv/bin/pip install yapf flake8
      ./myenv/bin/python -m yapf -i app.py
      ./myenv/bin/python -m flake8 app.py

    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: false

- task: CmdLine@2
  displayName: 'Build Docker Image'
  inputs:
      script: |
        echo "Build Docker Image"
        sudo docker build -t flaskapp . 
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError: false
- task: CmdLine@2
  displayName: 'Test Container'
  inputs:
    script: |
        echo Test Conteneur
        sudo docker run -p --rm -p 5000:8000 flaskapp bash -c "python3 app.py & sleep 3 && curl -X POST -d 'name=Renaud' http://localhost:5000/hello"

    workingDirectory: '$(Build.ArtifactStagingDirectory)'
  continueOnError : false


- task: CmdLine@2
  displayName: 'Save Docker Image'
  inputs:
    script: |
      echo Save Docker Image
      sudo docker save flaskapp > flaskapp.tar
    workingDirectory: '$(Build.BinariesDirectory)'
  continueOnError : false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.BinariesDirectory)/flaskapp.tar'
    ArtifactName: 'flaskapp'
    publishLocation: 'Container'
  continueOnError : false

 